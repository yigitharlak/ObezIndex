// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObezIndex1.Data;

namespace ObezIndex1.Migrations
{
    [DbContext(typeof(ObezIndexDbContext))]
    [Migration("20210803230913_addDoktorToDatabase")]
    partial class addDoktorToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ObezIndex1.Models.Doktor", b =>
                {
                    b.Property<int>("doc_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("doc_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("doc_ID");

                    b.ToTable("Doktor");
                });
#pragma warning restore 612, 618
        }
    }
}
